
////////////////////////////////////////
//                                     //
//   Generated by CEO's YAAAG - Ver 2  //
// (Yet Another Arya Addon Generator)  //
//    Modified by Hammerhand for       //
//      SA & High Seas content         //
//                                     //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class KOT_Pond3Addon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {658, -3, -3, 0}, {3257, -3, 2, 0}, {658, -3, 1, 0}// 1	2	3	
			, {3307, -3, 2, 0}, {3204, -2, -2, 4}, {6810, -3, 1, 21}// 4	5	6	
			, {6810, -3, -1, 22}, {3263, -3, -2, 22}, {3263, -3, 1, 21}// 7	8	9	
			, {3167, -3, -1, 21}, {3166, -3, 1, 20}, {3166, -3, -2, 21}// 10	11	12	
			, {3167, -3, 0, 20}, {6077, -3, 0, 20}, {3168, -3, -2, 20}// 13	14	15	
			, {3149, -2, 2, 0}, {3168, -3, -1, 20}, {3247, -3, 1, 0}// 16	17	18	
			, {3234, -3, -1, 19}, {7041, -3, -1, 20}, {3257, -2, 3, 0}// 19	20	21	
			, {3307, -3, -2, 0}, {3257, -3, -2, 0}, {6077, -3, 1, 20}// 22	23	24	
			, {3264, -3, 0, 21}, {6077, -3, -2, 20}, {3239, -3, 2, 0}// 25	26	27	
			, {3168, -3, 1, 20}, {1114, -3, -1, 0}, {1114, -3, 0, 0}// 28	29	30	
			, {6077, -3, -1, 20}, {3168, -3, 0, 20}, {9037, -2, 2, 0}// 31	32	33	
			, {13430, 1, -1, 0}, {13430, 0, -1, 0}, {13430, 0, 0, 0}// 34	35	36	
			, {13430, 1, 1, 0}, {13430, 0, 1, 0}, {13430, 1, 0, 0}// 37	38	39	
			, {13430, 2, 0, 0}, {13430, 2, 1, 0}, {13430, 2, 2, 0}// 40	41	42	
			, {13430, 3, 2, 0}, {6059, 1, 2, 0}, {6064, 0, 2, 0}// 43	44	45	
			, {6057, 3, 1, 0}, {6045, 3, 0, 0}, {6045, 4, 2, 0}// 46	47	48	
			, {6057, 2, -1, 0}, {6049, 2, 3, 0}, {6049, 3, 3, 0}// 49	50	51	
			, {6051, -1, 1, 0}, {6051, -1, 0, 0}, {6051, -1, -1, 0}// 52	53	54	
			, {6054, -1, -2, 0}, {6050, 0, 2, 0}, {6053, 3, -1, 0}// 55	56	57	
			, {6053, 4, 1, 0}, {6053, 2, -2, 0}, {6055, 4, 3, 0}// 58	59	60	
			, {6056, -1, 2, 0}, {6056, 1, 3, 0}, {3149, 0, -3, 0}// 61	62	63	
			, {3379, 3, 0, 0}, {13446, 2, 2, 1}, {13451, 0, -1, 1}// 64	65	66	
			, {3149, 4, 0, 0}, {3150, 1, 4, 0}, {3235, 4, 1, 1}// 67	68	69	
			, {6811, 4, 1, 7}, {6047, 1, -2, 0}, {6047, 0, -2, 0}// 70	72	73	
			, {3338, 1, -1, 1}, {3380, 0, 3, 0}, {3210, 1, 3, 0}// 74	75	76	
					};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new KOT_Pond3AddonDeed();
			}
		}

		[ Constructable ]
		public KOT_Pond3Addon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 3207, 2, -3, 0, 1151, -1, "", 1);// 71

		}

		public KOT_Pond3Addon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class KOT_Pond3AddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new KOT_Pond3Addon();
			}
		}

		[Constructable]
		public KOT_Pond3AddonDeed()
		{
			Name = "KOT_Pond3";
		}

		public KOT_Pond3AddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}